package de.gehring.openapi.model

import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.databind.JsonDeserializer
import com.fasterxml.jackson.databind.annotation.JsonDeserialize

/**
 * Defines a security scheme that can be used by the operations. Supported schemes are HTTP authentication, an API
 * key (either as a header, a cookie parameter or as a query parameter), OAuth2's common flows (implicit, password,
 * client credentials and authorization code) as defined in RFC6749, and OpenID Connect Discovery.
 *
 * @param type  Any 	REQUIRED. The type of the security scheme. Valid values are "apiKey", "http", "oauth2", "openIdConnect".
 * @param description  Any 	A short description for security scheme. CommonMark syntax MAY be used for rich text representation.
 * @param name  apiKey 	REQUIRED. The name of the header, query or cookie parameter to be used.
 * @param _in  apiKey 	REQUIRED. The location of the API key. Valid values are "query", "header" or "cookie".
 * @param scheme  http 	REQUIRED. The name of the HTTP Authorization scheme to be used in the Authorization header as defined in RFC7235. The values used SHOULD be registered in the IANA Authentication Scheme registry.
 * @param bearerFormat  http ("bearer") 	A hint to the client to identify how the bearer token is formatted. Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation purposes.
 * @param flows  oauth2 	REQUIRED. An object containing configuration information for the flow types supported.
 * @param openIdConnectUrl  openIdConnect 	REQUIRED. OpenId Connect URL to discover OAuth2 configuration values. This MUST be in the form of a URL.
 */
@JsonDeserialize(
    using = JsonDeserializer.None::class
)
data class SecurityScheme(
    val type: String,
    val description: String? = null,
    val name: String? = null,
    @JsonProperty("in")
    val _in: String? = null,
    val scheme: String? = null,
    val bearerFormat: String? = null,
    val flows: OAuthFlows? = null,
    val openIdConnectUrl: String? = null,
) : ReferenceOr<SecurityScheme>